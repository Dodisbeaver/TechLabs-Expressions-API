import os
from flask import Flask, jsonify,request
from dotenv import load_dotenv
from flask_cors import CORS

# Load variables from .env
load_dotenv()
print(os.environ.get('HELLO'))

# Create Flask instance
app = Flask(__name__)

#Allowing acess for our localhost only 
CORS(app, resources={r'/*':{'origins':'http://127.0.0.1:5500'}})

#Allows UTF-8 in JSON
app.config['JSON_AS_ASCII']=False


#Test data
face_data=[ #TODO change mouths!!
    {
        'id':0,
        'name':"smile",
        'mouth':"m 97.3423,213.19999 c 8.4419,6.97268 18.84406,16.35992 28.37838,20.03725 3.58744,1.33113 17.55481,6.18499 21.34908,6.12313 4.22117,0.0132 19.81861,-5.38315 21.89891,-6.42613 11.61071,-4.43883 20.13472,-11.22679 29.13472,-19.46698 -11.78149,8.72469 -11.86217,9.78333 -25.06561,16.51813 -4.33334,2.21034 -22.59321,7.84542 -25.97284,8.04015 -2.96885,-0.11472 -17.77123,-4.37283 -24.46975,-7.51833 -9.76665,-4.58625 -13.51862,-9.44092 -25.25289,-17.30722 z",
        #"M97.877 215.605c8.442 6.973 18.31 13.955 27.844 17.632 3.587 1.331 17.554 6.185 21.349 6.123 4.22.014 19.818-5.383 21.899-6.426 11.61-4.439 20.134-11.227 29.134-19.467-11.781 8.725-11.862 9.784-25.065 16.518-4.334 2.21-22.593 7.846-25.973 8.04-2.969-.114-17.771-4.372-24.47-7.518-9.766-4.586-12.984-7.035-24.718-14.902z",
        #"M94.872 212.333c19.031 12.602 48.523 48.825 103.565 1.134",
        'eb_right':"M169.9 126.155c12.29-15.431 23.867-13.79 35.152 0",
        'eb_left':"M85.423 126.155c11.717-15.672 23.434-14.558 35.151 0",
        'eye_left':"M121.33 159.606a34.71 34.71 0 0 1-.667 6.821c-2.036 10.144-8.497 17.558-16.153 17.558-7.81 0-14.376-7.715-16.27-18.174a34.864 34.864 0 0 1-.55-6.205c0-13.465 7.531-24.38 16.82-24.38 9.29 0 16.82 10.915 16.82 24.38z",
        'eye_right':"M203.918 159.795a34.81 34.81 0 0 1-.59 6.421c-1.944 10.349-8.474 17.958-16.23 17.958-7.498 0-13.85-7.111-16.021-16.935a34.547 34.547 0 0 1-.799-7.444c0-13.465 7.53-24.38 16.82-24.38s16.82 10.915 16.82 24.38z",
    },
    {
        'id':1,
        'name':"neutral",
        'mouth': "m 94.938837,213.06828 c 11.182233,-0.21635 12.957763,-0.39527 23.742453,0.0919 8.66395,0.60599 17.0513,0.82029 23.91524,1.67053 9.13486,0.55376 14.88731,0.98009 24.71612,1.64509 13.90796,2.01439 20.38005,0.11545 31.9476,1.50621 -11.51422,0.47088 -8.93666,0.91308 -15.63422,1.00931 -5.29019,0.076 -37.6628,-2.40964 -41.04243,-2.60437 -2.96885,0.11472 -23.4912,-1.90285 -31.41506,-2.52167 -8.19966,-0.64036 -7.07039,-0.18198 -16.229703,-0.79696 z",
        #"M94.939 213.068c11.182-.216 12.958-.395 23.742.092 8.664.606 17.052.82 23.916 1.67 9.134.554 14.887.98 24.716 1.646 13.908 2.014 20.38.115 31.947 1.506-11.514.47-8.936.913-15.634 1.01-5.29.075-37.663-2.41-41.042-2.605-2.97.115-23.492-1.903-31.415-2.522-8.2-.64-7.07-.182-16.23-.797z",
        #"M94.872 212.333c22.127-1.937 59.462 4.567 104.321 4.914",
        'eb_left':"M85.423 126.155c11.717-15.672 23.434-14.558 35.151 0",
        'eb_right':"M169.9 126.155c12.85 1.53 25.29 2.454 35.152 0",#"M169.9 126.155h35.152",
        'eye_left':"M121.33 159.606a34.71 34.71 0 0 1-.667 6.821c-2.036 10.144-8.497 17.558-16.153 17.558-7.81 0-14.376-7.715-16.27-18.174a34.864 34.864 0 0 1-.55-6.205c0-13.465 7.531-24.38 16.82-24.38 9.29 0 16.82 10.915 16.82 24.38z",
        'eye_right':"M203.918 159.795a34.81 34.81 0 0 1-.59 6.421c-1.944 10.349-8.474 17.958-16.23 17.958-7.498 0-13.85-7.111-16.021-16.935a34.547 34.547 0 0 1-.799-7.444c0-13.465 7.53-24.38 16.82-24.38s16.82 10.915 16.82 24.38z",
    },
    {
        'id':2,
        'name':"sad",
        'mouth':"m 98.210932,211.3291 c 8.441898,-6.97268 18.309518,-13.95449 27.843838,-17.63182 3.58744,-1.33113 17.55481,-6.18499 21.34908,-6.12313 4.22117,-0.0132 19.81861,5.38315 21.89891,6.42613 11.61071,4.43883 20.13472,11.22679 29.13472,19.46698 -11.78149,-8.72469 -11.86217,-9.78333 -25.06561,-16.51813 -4.33334,-2.21034 -22.59321,-7.84542 -25.97284,-8.04015 -2.96885,0.11472 -17.77123,4.37283 -24.46975,7.51833 -9.76665,4.58625 -12.98408,7.03549 -24.718348,14.90179 z",
        #"M98.21 211.33c8.443-6.974 18.31-13.955 27.845-17.633 3.587-1.33 17.555-6.185 21.349-6.123 4.221-.013 19.818 5.383 21.899 6.426 11.61 4.44 20.134 11.227 29.134 19.467-11.781-8.724-11.862-9.783-25.065-16.518-4.333-2.21-22.593-7.845-25.973-8.04-2.969.115-17.771 4.373-24.47 7.518-9.766 4.587-12.984 7.036-24.718 14.902z",
        #"M94.872 212.333c19.771-10.327 51.52-44.077 103.565 1.134",
        'eb_left':"M85.423 126.155c8.83 3.298 19.312 12.53 35.151 0",
        'eb_right':"M169.9 126.155c10.616 6.973 21.556 11.896 35.152 0",
        'eye_left':"M121.33 159.606a34.71 34.71 0 0 1-.667 6.821c-2.036 10.144-8.497 17.558-16.153 17.558-7.81 0-14.376-7.715-16.27-18.174a34.864 34.864 0 0 1-.55-6.205c0-13.465 7.531 8.762 16.82 8.762 9.29 0 16.82-22.227 16.82-8.762z",
        'eye_right':"M203.918 159.795a34.81 34.81 0 0 1-.59 6.421c-1.944 10.349-8.474 17.958-16.23 17.958-7.498 0-13.85-7.111-16.021-16.935a34.547 34.547 0 0 1-.799-7.444c0-13.465 7.247 9.207 16.537 9.207s17.103-22.672 17.103-9.207z",
    }
    ,
    {   
        ##THIS ONE IS NOT TESTED!!! DON'T KNOW IF THINGS ARE ON RIGHT PLACES
        'id':3,
        'name': "hearth",
        'mouth':"m 138.88292,214.70953 c 0.29018,0.8923 0.73034,2.66914 2.94324,4.51457 1.13812,0.7337 1.71617,1.26725 4.70458,2.55054 3.12036,-1.49331 3.46928,-1.17367 5.2155,-2.55073 1.84761,-1.55476 2.54333,-3.30436 2.92389,-4.12783 1.04743,-2.0329 -1.20794,-6.1339 -4.32798,-6.14212 -1.83622,-0.005 -3.43527,2.74021 -3.51653,3.87374 -0.18418,-0.82611 -1.92366,-3.93027 -4.46815,-3.89235 -2.47016,0.0368 -3.95468,3.65146 -3.47455,5.77418 z",
        'eb_right':"M169.9 126.155c12.29-15.431 23.867-13.79 35.152 0",
        'eb_left':"M85.423 126.155c11.717-15.672 23.434-14.558 35.151 0",
        'eye_left':"M121.33 159.606a34.71 34.71 0 0 1-.667 6.821c-2.036 10.144-8.497 17.558-16.153 17.558-7.81 0-14.376-7.715-16.27-18.174a34.864 34.864 0 0 1-.55-6.205c0-13.465 7.531-24.38 16.82-24.38 9.29 0 16.82 10.915 16.82 24.38z",
        'eye_rigth':"M203.918 159.795a34.81 34.81 0 0 1-.59 6.421c-1.944 10.349-8.474 17.958-16.23 17.958-7.498 0-13.85-7.111-16.021-16.935a34.547 34.547 0 0 1-.799-7.444c0-13.465 7.53-24.38 16.82-24.38s16.82 10.915 16.82 24.38z"
    }
    
]
# Default route to /
@app.route("/")
def index():
    return "Hello Flask!"

#Getting all the API data in face/all
@app.route('/face/all', methods=['GET'])
def faces():
    return jsonify(face_data)



#http://127.0.0.1:5000/face?name=smile
@app.route('/face',methods=['GET']) 
def get_name():
    if 'name' in request.args:
        name=str(request.args['name'])
    else:
        return "ERROR: Name needed"

    results = []
    for face in face_data:
        if face['name'] == name:
            results.append(face)

    # convert list of Python dictionaries to the JSON format
    return jsonify(results)


if __name__ == "__main__":
        app.run()